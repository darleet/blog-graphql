type Comment {
    id: ID!
    content: String!
    author: User!
    votes: Int!
    replies: [Comment!]
    createdAt: Time!
}

input NewComment {
    articleID: ID!
    content: String!
    parentID: ID
}

input UpdateComment {
    id: ID!
    content: String # is nullable due to other fields may be added
}

extend type Mutation {
    createComment(input: NewComment!): Comment! @isAuthenticated
    updateComment(input: UpdateComment): Comment! @isAuthenticated
    deleteComment(id: ID!): Boolean! @isAuthenticated
}

extend type Subscription {
    newComment(articleID: ID!): Comment! @isAuthenticated
}