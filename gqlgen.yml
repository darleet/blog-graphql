# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - ./api/**/*.graphql

# Where should the generated server code go?
exec:
  layout: follow-schema
  dir: internal/ports/gql/runtime
  package: runtime

# Where should any generated models go?
model:
  filename: internal/model/generated.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: internal/ports/gql/resolver
  package: resolver
  filename_template: "{name}.go"

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/darleet/blog-graphql/internal/ports/graph"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  UUID:
    model:
      - github.com/99designs/gqlgen/graphql.UUID